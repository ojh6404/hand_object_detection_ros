<launch>
  <arg name="input_image" default="/kinect_head/rgb/image_rect_color"/>
  <arg name="input_depth" default="/kinect_head/depth_registered/image_raw"/>
  <arg name="input_detections" default="/acr_hand_mocap_node/hand_detections"/>
  <arg name="camera_info" default="/kinect_head/rgb/camera_info"/>
  <arg name="decompress" default="true" />
  <arg name="device" default="cuda:0" /> <!-- cpu or cuda -->
  <arg name="track_3d" default="false" />
  <arg name="slop" default="0.2" />
  <arg name="hand_bbox_size_threshold" default="50" /> <!-- filter for mis-detection -->
  <arg name="renderer" default="pytorch3d" /> <!-- pytorch3d, pyrender -->
  <arg name="detection_threshold" default="0.7" />
  <arg name="temporal_optimization" default="true" />
  <arg name="visualization" default="true" />

  <arg name="_input_image" value="$(arg input_image)" unless="$(arg decompress)" />
  <arg name="_input_image" value="/hand_object_detection_node/input_image" if="$(arg decompress)" />

  <!-- Image Decompress -->
  <node name="image_decompresser"
        pkg="image_transport" type="republish"
        args="compressed raw" respawn="true" if="$(arg decompress)">
    <remap from="in" to="$(arg input_image)"/>
    <remap from="out" to="$(arg _input_image)"/>
  </node>

  <!-- <node name="depth_decompresser" -->
  <!--      pkg="image_transport" type="republish" -->
  <!--      args="compressedDepth raw" respawn="true"> -->
  <!--   <remap from="in" to="$(arg input_depth)"/> -->
  <!--   <remap from="out" to="decompressed_depth"/> -->
  <!-- </node> -->

  <!-- hand_object_detection node -->
  <node name="acr_hand_mocap_node"
        pkg="hand_object_detection_ros" type="acr_hand_mocap_node.py"
        output="screen" >
    <remap from="~input_image" to="$(arg _input_image)" />
    <rosparam subst_value="true" >
        device: $(arg device)
        hand_bbox_size_thresh: $(arg hand_bbox_size_threshold)
        detection_thresh: $(arg detection_threshold)
        renderer: $(arg renderer)
        temporal_optimization: $(arg temporal_optimization)
        visualization: $(arg visualization)
    </rosparam>
  </node>
  <!-- hand 3d track node node -->
  <node name="hand_3d_node"
        pkg="hand_object_detection_ros" type="hand_3d_node.py"
        output="screen" if="$(arg track_3d)">
    <remap from="~input_depth" to="$(arg input_depth)" />
    <remap from="~camera_info" to="$(arg camera_info)" />
    <remap from="~input_detections" to="$(arg input_detections)" />
    <rosparam subst_value="true" >
        slop: $(arg slop)
    </rosparam>
  </node>
</launch>
